{
  "abstract" : [
    {
      "text" : "Uses a matcher on a given value to see if it passes the matcher.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher\/satisfies(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Nimble12AsyncMatcherV9satisfiesyAA0C6ResultVAA0B10ExpressionVyxGYaKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "satisfies"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
        "text" : "AsyncExpression"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">) "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble13MatcherResultV",
        "text" : "MatcherResult"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "satisfies(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "satisfies"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "expression"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
              "text" : "AsyncExpression"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ">) "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/MatcherResult",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble13MatcherResultV",
              "text" : "MatcherResult"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The value to run the matcher’s logic against",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "expression"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A matcher result indicate passing or failing and an associated error message.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/asyncmatcher\/satisfies(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/AsyncExpression": {
  "abstract" : [
    {
      "text" : "Expression represents the closure of the value inside expect(…).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Expressions are memoized by default. This makes them safe to call",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "evaluate() multiple times without causing a re-evaluation of the underlying",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncExpression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpression"
},
"doc://Nimble/documentation/Nimble/AsyncMatcher": {
  "abstract" : [
    {
      "text" : "An AsyncMatcher is part of the new matcher API that provides assertions to expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncMatcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncmatcher"
},
"doc://Nimble/documentation/Nimble/AsyncMatcher/satisfies(_:)": {
  "abstract" : [
    {
      "text" : "Uses a matcher on a given value to see if it passes the matcher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfies"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
      "text" : "AsyncExpression"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble13MatcherResultV",
      "text" : "MatcherResult"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher\/satisfies(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfies(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncmatcher\/satisfies(_:)"
},
"doc://Nimble/documentation/Nimble/MatcherResult": {
  "abstract" : [
    {
      "text" : "The value that a Matcher returns to describe if the given (actual) value matches the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "matcher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MatcherResult"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/MatcherResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MatcherResult"
    }
  ],
  "role" : "symbol",
  "title" : "MatcherResult",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherresult"
}
}
}