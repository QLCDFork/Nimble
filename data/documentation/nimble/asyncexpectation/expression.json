{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation\/expression"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Nimble16AsyncExpectationV10expressionAA0B10ExpressionVyxGvp",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "let"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "expression"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
        "text" : "AsyncExpression"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Value"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Property",
    "symbolKind" : "property",
    "title" : "expression"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "let"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "expression"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
              "text" : "AsyncExpression"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/asyncexpectation\/expression"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/AsyncExpectation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncExpectation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncExpectation"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncExpectation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpectation"
},
"doc://Nimble/documentation/Nimble/AsyncExpectation/expression": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expression"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
      "text" : "AsyncExpression"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation\/expression",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpectation\/expression"
},
"doc://Nimble/documentation/Nimble/AsyncExpression": {
  "abstract" : [
    {
      "text" : "Expression represents the closure of the value inside expect(â€¦).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Expressions are memoized by default. This makes them safe to call",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "evaluate() multiple times without causing a re-evaluation of the underlying",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncExpression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpression"
}
}
}