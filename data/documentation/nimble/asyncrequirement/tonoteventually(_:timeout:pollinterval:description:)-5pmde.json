{
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-5pmde"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Nimble",
    "externalID" : "s:6Nimble16AsyncRequirementV15toNotEventually_7timeout12pollInterval11descriptionxAA0B7MatcherVyxG_AA0a4TimeI0OALSSSgtYaKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "toNotEventually"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
        "text" : "AsyncMatcher"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Value"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "externalParam",
        "text" : "timeout"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
        "text" : "NimbleTimeInterval"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "pollInterval"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
        "text" : "NimbleTimeInterval"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "description"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : "?) "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Value"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "toNotEventually(_:timeout:pollInterval:description:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@discardableResult"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "toNotEventually"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "matcher"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
              "text" : "AsyncMatcher"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "timeout"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTimeInterval",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
              "text" : "NimbleTimeInterval"
            },
            {
              "kind" : "text",
              "text" : " = PollingDefaults.timeout, "
            },
            {
              "kind" : "externalParam",
              "text" : "pollInterval"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTimeInterval",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
              "text" : "NimbleTimeInterval"
            },
            {
              "kind" : "text",
              "text" : " = PollingDefaults.pollInterval, "
            },
            {
              "kind" : "externalParam",
              "text" : "description"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : "? = nil) "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Alias of toEventuallyNot()",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/asyncrequirement\/tonoteventually(_:timeout:pollinterval:description:)-5pmde"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/AsyncMatcher": {
  "abstract" : [
    {
      "text" : "An AsyncMatcher is part of the new matcher API that provides assertions to expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncMatcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncmatcher"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncRequirement",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNotEventually(_:timeout:pollInterval:description:)-5pmde": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNotEventually"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-5pmde",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNotEventually(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonoteventually(_:timeout:pollinterval:description:)-5pmde"
},
"doc://Nimble/documentation/Nimble/NimbleTimeInterval": {
  "abstract" : [
    {
      "text" : "A reimplementation of ",
      "type" : "text"
    },
    {
      "code" : "DispatchTimeInterval",
      "type" : "codeVoice"
    },
    {
      "text" : " without the ",
      "type" : "text"
    },
    {
      "code" : "never",
      "type" : "codeVoice"
    },
    {
      "text" : " case, and conforming to ",
      "type" : "text"
    },
    {
      "code" : "Sendable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleTimeInterval"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTimeInterval",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleTimeInterval"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleTimeInterval",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbletimeinterval"
}
}
}