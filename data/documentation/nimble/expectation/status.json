{
  "abstract" : [
    {
      "text" : "The status of the test after matchers have been evaluated.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble",
        "doc:\/\/Nimble\/documentation\/Nimble\/Expectation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/Expectation\/status"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Nimble11ExpectationP6statusAA0B6StatusOvp",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "status"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble17ExpectationStatusO",
        "text" : "ExpectationStatus"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "required" : true,
    "role" : "symbol",
    "roleHeading" : "Instance Property",
    "symbolKind" : "property",
    "title" : "status"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "var"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "status"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStatus",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble17ExpectationStatusO",
              "text" : "ExpectationStatus"
            },
            {
              "kind" : "text",
              "text" : " { "
            },
            {
              "kind" : "keyword",
              "text" : "get"
            },
            {
              "kind" : "text",
              "text" : " }"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This property can be used for changing test behavior based whether an expectation has",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "passed.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "In the below example, we perform additional tests on an array only if it has enough",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "elements.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "if expect(array).to(haveCount(10)).status == .passed {",
            "   expect(array[9]).to(...)",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Similar functionality can be achieved using the ",
                  "type" : "text"
                },
                {
                  "code" : "onFailure(throw:)",
                  "type" : "codeVoice"
                },
                {
                  "text" : " method.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Remark",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/expectation\/status"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/Expectation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expectation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Expectation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expectation"
    }
  ],
  "role" : "symbol",
  "title" : "Expectation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectation"
},
"doc://Nimble/documentation/Nimble/Expectation/status": {
  "abstract" : [
    {
      "text" : "The status of the test after matchers have been evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "status"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble17ExpectationStatusO",
      "text" : "ExpectationStatus"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Expectation\/status",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "status",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectation\/status"
},
"doc://Nimble/documentation/Nimble/ExpectationStatus": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpectationStatus"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpectationStatus"
    }
  ],
  "role" : "symbol",
  "title" : "ExpectationStatus",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectationstatus"
}
}
}