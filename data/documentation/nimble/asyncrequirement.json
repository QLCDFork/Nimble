{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Nimble16AsyncRequirementV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AsyncRequirement"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AsyncRequirement"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "AsyncRequirement"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AsyncRequirement"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/init(expression:customError:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/customError",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/expression",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/location"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/alwaysTo(_:until:pollInterval:description:)-1io7",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/alwaysTo(_:until:pollInterval:description:)-20c7k",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/neverTo(_:until:pollInterval:description:)-1ri7g",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/neverTo(_:until:pollInterval:description:)-66etj",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/notTo(_:description:)-34ct2",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/notTo(_:description:)-7997q",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/to(_:description:)-3envi",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/to(_:description:)-67o3l",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toAlways(_:until:pollInterval:description:)-3z2mn",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toAlways(_:until:pollInterval:description:)-vhdr",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventually(_:timeout:pollInterval:description:)-714fw",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventually(_:timeout:pollInterval:description:)-7xl7w",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventuallyNot(_:timeout:pollInterval:description:)-360ei",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventuallyNot(_:timeout:pollInterval:description:)-3tbjo",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNever(_:until:pollInterval:description:)-3hom9",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNever(_:until:pollInterval:description:)-671mg",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNot(_:description:)-1lgro",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNot(_:description:)-iypr",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-41ifb",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-5pmde",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/verify(_:_:_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/asyncrequirement"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncRequirement",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/alwaysTo(_:until:pollInterval:description:)-1io7": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to always match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continusouly at each pollInterval until the timeout is reached",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "alwaysTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/alwaysTo(_:until:pollInterval:description:)-1io7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "alwaysTo(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/alwaysto(_:until:pollinterval:description:)-1io7"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/alwaysTo(_:until:pollInterval:description:)-20c7k": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to always match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continusouly at each pollInterval until the timeout is reached",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "alwaysTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/alwaysTo(_:until:pollInterval:description:)-20c7k",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "alwaysTo(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/alwaysto(_:until:pollinterval:description:)-20c7k"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/customError": {
  "abstract" : [
    {
      "text" : "A custom error to throw.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "If nil, then we will throw a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/RequireError",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on failure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/customError",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "customError",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/customerror"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/expression": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expression"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
      "text" : "AsyncExpression"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/expression",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/expression"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/init(expression:customError:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "expression"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AsyncExpressionV",
      "text" : "AsyncExpression"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/init(expression:customError:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(expression:customError:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/init(expression:customerror:)"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/location": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "location"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble14SourceLocationC",
      "text" : "SourceLocation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/location",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "location",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/location"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/neverTo(_:until:pollInterval:description:)-1ri7g": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to never match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "neverTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/neverTo(_:until:pollInterval:description:)-1ri7g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "neverTo(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/neverto(_:until:pollinterval:description:)-1ri7g"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/neverTo(_:until:pollInterval:description:)-66etj": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to never match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "neverTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/neverTo(_:until:pollInterval:description:)-66etj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "neverTo(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/neverto(_:until:pollinterval:description:)-66etj"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/notTo(_:description:)-34ct2": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "notTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/notTo(_:description:)-34ct2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "notTo(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/notto(_:description:)-34ct2"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/notTo(_:description:)-7997q": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "notTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/notTo(_:description:)-7997q",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "notTo(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/notto(_:description:)-7997q"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/to(_:description:)-3envi": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/to(_:description:)-3envi",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "to(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/to(_:description:)-3envi"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/to(_:description:)-67o3l": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/to(_:description:)-67o3l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "to(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/to(_:description:)-67o3l"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toAlways(_:until:pollInterval:description:)-3z2mn": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to always match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continusouly at each pollInterval until the timeout is reached",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toAlways"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toAlways(_:until:pollInterval:description:)-3z2mn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toAlways(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toalways(_:until:pollinterval:description:)-3z2mn"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toAlways(_:until:pollInterval:description:)-vhdr": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to always match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continusouly at each pollInterval until the timeout is reached",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toAlways"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toAlways(_:until:pollInterval:description:)-vhdr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toAlways(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toalways(_:until:pollinterval:description:)-vhdr"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toEventually(_:timeout:pollInterval:description:)-714fw": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to match by checking continuously",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toEventually"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventually(_:timeout:pollInterval:description:)-714fw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toEventually(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toeventually(_:timeout:pollinterval:description:)-714fw"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toEventually(_:timeout:pollInterval:description:)-7xl7w": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to match by checking continuously",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toEventually"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventually(_:timeout:pollInterval:description:)-7xl7w",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toEventually(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toeventually(_:timeout:pollinterval:description:)-7xl7w"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toEventuallyNot(_:timeout:pollInterval:description:)-360ei": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toEventuallyNot"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventuallyNot(_:timeout:pollInterval:description:)-360ei",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toEventuallyNot(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toeventuallynot(_:timeout:pollinterval:description:)-360ei"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toEventuallyNot(_:timeout:pollInterval:description:)-3tbjo": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toEventuallyNot"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toEventuallyNot(_:timeout:pollInterval:description:)-3tbjo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toEventuallyNot(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/toeventuallynot(_:timeout:pollinterval:description:)-3tbjo"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNever(_:until:pollInterval:description:)-3hom9": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to never match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNever"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNever(_:until:pollInterval:description:)-3hom9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNever(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonever(_:until:pollinterval:description:)-3hom9"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNever(_:until:pollInterval:description:)-671mg": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to never match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNever"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "until"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNever(_:until:pollInterval:description:)-671mg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNever(_:until:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonever(_:until:pollinterval:description:)-671mg"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNot(_:description:)-1lgro": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNot"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNot(_:description:)-1lgro",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNot(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonot(_:description:)-1lgro"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNot(_:description:)-iypr": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNot"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNot(_:description:)-iypr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNot(_:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonot(_:description:)-iypr"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNotEventually(_:timeout:pollInterval:description:)-41ifb": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNotEventually"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-41ifb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNotEventually(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonoteventually(_:timeout:pollinterval:description:)-41ifb"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/toNotEventually(_:timeout:pollInterval:description:)-5pmde": {
  "abstract" : [
    {
      "text" : "Tests the actual value using a matcher to not match by checking",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously at each pollInterval until the timeout is reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "toNotEventually"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pollInterval"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/toNotEventually(_:timeout:pollInterval:description:)-5pmde",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "toNotEventually(_:timeout:pollInterval:description:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/tonoteventually(_:timeout:pollinterval:description:)-5pmde"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement/verify(_:_:_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "verify"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble14FailureMessageC",
      "text" : "FailureMessage"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement\/verify(_:_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "verify(_:_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement\/verify(_:_:_:)"
},
"doc://Nimble/documentation/Nimble/RequireError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RequireError"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/RequireError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RequireError"
    }
  ],
  "role" : "symbol",
  "title" : "RequireError",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requireerror"
}
}
}